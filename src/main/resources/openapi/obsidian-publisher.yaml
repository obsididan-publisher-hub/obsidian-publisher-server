openapi: 3.0.3
info:
  title: Obsidian Notes API
  version: 1.0.0
  description: API для работы с Obsidian заметками

paths:
  /notes/{id}:
    get:
      summary: Получить заметку по идентификатору
      description: >
        Идентификатор (`id`) вычисляется как **MD5-хеш** от полного пути заметки (без расширения) внутри Obsidian-хранилища.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "5d41402abc4b2a76b9719d911017c592"
          description: MD5-хеш полного пути к заметке
      responses:
        "200":
          description: Заметка успешно получена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
              examples:
                sample:
                  summary: Пример заметки
                  value:
                    id: "5d41402abc4b2a76b9719d911017c592"
                    path: "Projects/Obsidian/ExampleNote.md"
                    title: "ExampleNote"
                    fields:
                      - name: "done"
                        type: "boolean"
                        value: true
                      - name: "tags"
                        type: "list"
                        value: [ "obsidian", "api" ]
                      - name: "priority"
                        type: "number"
                        value: 3
                    content: |
                      # Заголовок
                      Текст заметки с **Markdown** форматированием.
        "404":
          description: Заметка не найдена

  /tags:
    get:
      summary: Получить все теги
      description: Вернуть список всех тегов, присутствующих в хранилище Obsidian.
      responses:
        "200":
          description: Список тегов
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: "obsidian"
              examples:
                sample:
                  summary: Пример списка тегов
                  value: [ "obsidian", "api", "note" ]

components:
  schemas:
    Note:
      type: object
      description: Заметка Obsidian
      properties:
        id:
          type: string
          description: MD5-хеш полного пути заметки (без расширения)
          example: "5d41402abc4b2a76b9719d911017c592"
        path:
          type: string
          description: Полный путь к заметке в хранилище (с расширением)
          example: "Projects/Obsidian/ExampleNote.md"
        title:
          type: string
          description: Название заметки (без расширения)
          example: "ExampleNote"
        fields:
          type: array
          description: Список полей заметки
          items:
            $ref: "#/components/schemas/NoteField"
        content:
          type: string
          description: Markdown-содержимое заметки
          example: "# Заголовок\nТекст заметки..."

    NoteField:
      type: object
      description: Поле заметки
      properties:
        name:
          type: string
          description: Название поля
          example: "createdAt"
        type:
          type: string
          enum: [ string, number, boolean, list ]
          description: Тип значения поля
          example: "number"
        value:
          description: Значение поля (тип зависит от поля)
          oneOf:
            - $ref: '#/components/schemas/NoteFieldString'
            - $ref: '#/components/schemas/NoteFieldNumber'
            - $ref: '#/components/schemas/NoteFieldBoolean'
            - $ref: '#/components/schemas/NoteFieldList'

    NoteFieldString:
      type: string
      description: Значение строкового поля
      example: "Задача"

    NoteFieldNumber:
      type: number
      description: Значение числового поля
      example: 42

    NoteFieldBoolean:
      type: boolean
      description: Значение логического поля
      example: true

    NoteFieldList:
      type: array
      description: Значение поля в виде списка строк
      items:
        type: string
      example: [ "tag1", "tag2" ]